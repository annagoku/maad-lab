spring.application.name=ecommercebe-service
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=admin
spring.datasource.url=jdbc:postgresql://${DB_SERVER:localhost}:5432/${POSTGRES_DB:ecommerce}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:admin}
#Inizializzazione dati
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

#CORS
spring.mvc.dispatch-options-request=true
server.port=8080
server.forward-headers-strategy=framework
spring.cloud.kubernetes.enabled=false
spring.cloud.client.hostname=localhost
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss.SSS
# Locale used for formatting
spring.jackson.time-zone=GMT+1


# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto =  update

# REDIS CONNECTION

spring.data.redis.host=${REDIS_SERVER:localhost}
spring.data.redis.port=6379